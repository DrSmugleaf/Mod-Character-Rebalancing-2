local info = KnownModIndex:LoadModInfo("workshop-#")


local function addsimpostinit(inst)
	if not TheWorld.ismastersim then
		return inst
	end
end

local function balancecharacter(inst)
	if not TheWorld.ismastersim then
		return inst
	end
	
	local characterstats =	{
								health = MODTUNING.CHARACTER_HEALTH,
								hunger = MODTUNING.CHARACTER_HUNGER,
								sanity = MODTUNING.CHARACTER_SANITY,
								damage = MODTUNING.CHARACTER_DAMAGE,
								walkspeed = MODTUNING.CHARACTER_WALK_SPEED,
								runspeed = MODTUNING.CHARACTER_RUN_SPEED,
								winterinsulation = MODTUNING.CHARACTER_WINTER_INSULATION,
								summerinsulation = MODTUNING.CHARACTER_SUMMER_INSULATION,
								dapperness = MODTUNING.CHARACTER_DAPPERNESS,
								dapperness_mult = MODTUNING.CHARACTER_DAPPERNESS_MULT,
								night_drain_mult = MODTUNING.CHARACTER_NIGHT_DRAIN_MULT,
								neg_aura_mult = MODTUNING.CHARACTER_NEG_AURA_MULT,
								strongstomach = MODTUNING.CHARACTER_STRONG_STOMACH,
								hungerrate = MODTUNING.CHARACTER_HUNGER_RATE,
								hungerkillrate = MODTUNING.CHARACTER_HUNGER_KILL_RATE,
								levelingfood = {MODMODTUNING.CHARACTER_LEVELING_FOOD_PREFAB_1 = MODMODTUNING.CHARACTER_LEVEL_PER_FOOD_PREFAB_1}
							}
	
	ModifyCharacter:ModifyStats(inst, characterstats)
	OR
	ModifyCharacter:ModifyStatsWithLeveling(inst, characterstats)
end

if not ignoreMCR then
	if info.version ~= MODTUNING.CHARACTER_SUPPORTED_VERSION then
		LogHelper:PrintWarn("Running unsupported version of " .. info.name .. " Version: " .. info.version .. " Supported version: " .. MODTUNING.CHARACTER_SUPPORTED_VERSION)
	end
	LogHelper:PrintInfo("Balancing " .. info.name ..  " by " .. info.author .. " Version: " .. info.version)
	AddSimPostInit(addsimpostinit)
	AddPrefabPostInit("character", balancecharacter)
else
	LogHelper:PrintInfo("Balancing " .. info.name .. " disabled by " .. info.author)
end
